{"version":3,"sources":["components/Log/Log.js","redux/actions.js","redux/actionsTypes.js","components/Order/Order.js","components/Card/Card.js","components/List/List.js","data.js","components/Form/Form.js","App.js","components/ExportCSV/ExportCSV.js","components/TableData/TableData.js","handleData.js","redux/reducers/orders.js","redux/reducers/app.js","redux/reducers/form.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","root","width","padding","content","display","justifyContent","contentInfo","flexWrap","Log","logData","date","time","posAmount","posLevel","stopLoss","takeProfit","description","status","classes","result","Accordion","className","AccordionSummary","expandIcon","Icon","aria-label","AccordionDetails","activateOrderAction","id","type","payload","startFormAction","data","config","updateDepositAction","deposit","position","boxShadow","logItem","paddingBottom","connect","state","order","orders","activeOrder","dispatch","startForm","title","openForm","deleteOrder","deleteOrderAction","updateOrder","deleteActiveOrder","logs","history","useHistory","isNeedsLogging","key","value","index","length","hasOwnProperty","handleModifyExistingOrder","formData","formConfig","log","Object","assign","console","logsForExcel","push","handleCreateLogsForExcelData","getLogValueRecursively","logsList","map","slice","itemProps","ListItem","Card","CardContent","color","onClick","List","ButtonGroup","Button","formTitle","formSubmitAction","app","activateOrder","cardData","handleOpenOrder","setResultClassName","toFixed","ListOrders","dataOrder","orderList","item","uid","replace","c","r","Math","random","toString","FORM_DATA","maxWidth","margin","box","TextField","marginBottom","TextFieldHalfWidth","textAlign","fontSize","formState","form","resetForm","setActiveOrder","updateDeposit","useState","Date","toJSON","initialData","setData","handleCloseForm","Box","Typography","component","onSubmit","e","preventDefault","typeAction","required","label","variant","defaultValue","onChange","target","name","InputLabelProps","shrink","multiline","rows","resultPoint","abs","parseFloat","depositValue","handleCloseWithTakeProfit","handleCloseStopLoss","theme","fab","bottom","spacing","right","zIndex","addOrder","openDepositForm","resetFilter","changeFilter","filterName","changeFilterAction","changeSortOrders","strategyName","changeSortOrdersAction","props","list","isOpenForm","isFormDepositOpen","sortName","filter","initialDepositValue","setDepositValue","searchValue","setSearchValue","handleCreateOrder","createFullDate","d","t","split","getTime","titleSortStrategy","a","b","toLocaleString","latestSortStrategy","newestSortStrategy","statusSortStrategy","priorityStatus","pending","active","HitTP","HitSL","cancel","newA","newB","Fab","AppBar","Toolbar","navItem","to","all","running","finished","wins","loses","sort","applySort","toLowerCase","includes","ExportCSV","csvData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","TableCell","JSON","parse","localStorage","getItem","dataToExcel","comments","join","StyledTableRow","action","hover","TableRow","tableRow","scope","align","table","minWidth","TableData","class","TableContainer","Paper","Table","TableHead","TableBody","getOrdersData","setItem","stringify","orderData","findIndex","removeItem","localState","initialState","find","isAnyFilter","rootReducer","combineReducers","store","createStore","composeWithDevTools","createMuiTheme","primary","main","secondary","createBrowserHistory","ReactDOM","render","ThemeProvider","exact","path","App","Form","document","getElementById"],"mappings":"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","file":"static/js/main.d2a7e42c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tpadding: 0\r\n\t},\r\n\tcontent: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tcontentInfo: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tjustifyContent: 'space-between'\r\n\t}\r\n});\r\n\r\nconst Log = (logData) => {\r\n\tconst { date, time, posAmount, posLevel, stopLoss, takeProfit, description, status, result } = logData;\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Accordion className={classes.root}>\r\n\t\t\t<AccordionSummary\r\n\t\t\t\texpandIcon={<Icon aria-label=\"keyboard_arrow_down\">keyboard_arrow_down</Icon>}\r\n\t\t\t>\r\n\t\t\t\t<span>{status}</span>\r\n\t\t\t</AccordionSummary>\r\n\t\t\t<AccordionDetails className={classes.contentInfo}>\r\n\t\t\t\t<div className={classes.content}>\r\n\t\t\t\t\t<span>{date}</span>\r\n\t\t\t\t\t<span>{time}</span>\r\n\t\t\t\t</div>\r\n\t\t\t<div className={classes.content}>\r\n\t\t\t\t{ posAmount ? <span><span>size: </span>{posAmount}</span> : null }\r\n\t\t\t\t{posLevel ? <span><span>PL: </span>{posLevel}</span> : null }\r\n\t\t\t\t{stopLoss ? <span><span>SL: </span>{stopLoss}</span> : null }\r\n\t\t\t\t{takeProfit ? <span><span>TP: </span>{takeProfit}</span> : null }\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t{description ?\r\n\t\t\t\t<div className={classes.content}>\r\n\t\t\t\t\t\t<p>{description}</p>\r\n\t\t\t\t</div> :\r\n\t\t\t\tnull\r\n\t\t\t}\r\n\t\t\t</AccordionDetails>\r\n\t\t</Accordion>\r\n\t)\r\n}\r\n\r\nexport default Log;","import {\r\n\tADD_ORDER,\r\n\tOPEN_FORM,\r\n\tSTART_FORM,\r\n\tCHANGE_STATUS,\r\n\tDELETE_ORDER,\r\n\tRESET_FORM,\r\n\tUPDATE_ORDER,\r\n\tSET_ACTIVE_ORDER,\r\n\tDELETE_ACTIVE_ORDER,\r\n\tCHANGE_LOGS,\r\n\tOPEN_DEPOSIT_FORM,\r\n\tUPDATE_DEPOSIT,\r\n\tCHANGE_FILTER_ORDERS,\r\n\tRESET_FILTER_ORDERS,\r\n\tCHANGE_SORT_ORDERS\r\n} from './actionsTypes';\r\n\r\nexport const addOrderAction = (order) => ({\r\n\ttype: ADD_ORDER,\r\n\tpayload: order\r\n});\r\n\r\nexport const updateOrderAction = (order) => ({\r\n\ttype: UPDATE_ORDER,\r\n\tpayload: order\r\n})\r\n\r\nexport const openFormAction = () => ({\r\n\ttype: OPEN_FORM\r\n});\r\n\r\nexport const activateOrderAction = (id) => ({\r\n\ttype: SET_ACTIVE_ORDER,\r\n\tpayload: id\r\n});\r\n\r\nexport const deleteActiveOrderAction = () => ({\r\n\ttype: DELETE_ACTIVE_ORDER\r\n})\r\n\t\r\nexport const startFormAction = (data, config) => ({\r\n\ttype: START_FORM,\r\n\tpayload: {\r\n\t\tdata,\r\n\t\tconfig\r\n\t}\r\n});\r\n\r\nexport const changeStatusAction = (id, status) => ({\r\n\ttype: CHANGE_STATUS,\r\n\tpayload: {\r\n\t\tid, status\r\n\t}\r\n});\r\n\r\nexport const deleteOrderAction = (id) => ({\r\n\ttype: DELETE_ORDER,\r\n\tpayload: id\r\n});\r\n\r\nexport const resetFormAction = () => ({\r\n\ttype: RESET_FORM\r\n});\r\n\r\nexport const changeLogsAction = (log, id) => ({\r\n\ttype: CHANGE_LOGS,\r\n\tpayload: {\r\n\t\tlog, id\r\n\t}\r\n});\r\n\r\nexport const openDepositFormAction = () => ({\r\n\ttype: OPEN_DEPOSIT_FORM,\r\n});\r\n\r\nexport const updateDepositAction = (deposit) => ({\r\n\ttype: UPDATE_DEPOSIT,\r\n\tpayload: deposit\r\n});\r\n\r\nexport const changeFilterAction = (filterName) => ({\r\n\ttype: CHANGE_FILTER_ORDERS,\r\n\tpayload: filterName\r\n});\r\n\r\nexport const resetFilterAction = () => ({\r\n\ttype: RESET_FILTER_ORDERS,\r\n});\r\n\r\nexport const changeSortOrdersAction = (strategyName) => ({\r\n\ttype: CHANGE_SORT_ORDERS,\r\n\tpayload: strategyName\r\n});","export const ADD_ORDER = 'ADD_ORDER ';\r\nexport const UPDATE_ORDER = 'UPDATE_ORDER';\r\nexport const DELETE_ORDER = 'DELETE_ORDER ';\r\nexport const START_FORM = 'START_FORM';\r\nexport const MODIFY_ACTIVE_ORDER = 'MODIFY_ACTIVE_ORDER';\r\nexport const DELETE_ACTIVE_ORDER = 'DELETE_ACTIVE_ORDER';\r\nexport const CHANGE_LOGS = 'CHANGE_LOGS';\r\nexport const RESET_FORM = 'RESET_FORM';\r\nexport const CHANGE_STATUS = 'CHANGE_STATUS';\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const OPEN_DEPOSIT_FORM = 'OPEN_DEPOSIT_FORM';\r\nexport const UPDATE_DEPOSIT = 'UPDATE_DEPOSIT';\r\nexport const SET_ACTIVE_ORDER = 'SET_ACTIVE_ORDERS';\r\nexport const CHANGE_FILTER_ORDERS = 'CHANGE_FILTER_ORDERS';\r\nexport const RESET_FILTER_ORDERS = 'RESET_FILTER_ORDERS';\r\nexport const CHANGE_SORT_ORDERS = 'CHANGE_SORT_ORDERS';\r\n","import React, { Fragment} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../Order/Order.scss';\r\nimport Log from '../Log/Log';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\tstartFormAction,\r\n\topenFormAction,\r\n\tdeleteOrderAction,\r\n\tupdateOrderAction,\r\n\tdeleteActiveOrderAction\r\n} from '../../redux/actions';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tpadding: 20,\r\n\t\twidth: 400,\r\n\t\tposition: 'relative',\r\n\t\tboxShadow: '0 2px 4px -2px rgba(0,0,0,0.24), 0 4px 24px -2px rgba(0, 0, 0, 0.2)',\r\n\t},\r\n\tlogItem: {\r\n\t\tpadding: 0,\r\n\t\tpaddingBottom: '15px',\r\n\t\twidth: '100%',\r\n\t}\r\n});\r\n\r\nconst Order = ({deleteActiveOrder, startForm, updateOrder, order}) => {\r\n\tconst history = useHistory();\r\n\tconst classes = useStyles();\r\n\r\n\tconst isNeedsLogging = (logs, key, value, index = logs.length - 1) => {\r\n\t\tif (!logs[index].hasOwnProperty(key)) {\r\n\t\t\treturn isNeedsLogging(logs, key, value, index - 1);\r\n\t\t}\r\n\t\treturn logs[index][key] !== value;\r\n\t}\r\n\r\n\tconst handleCreateLogsForExcelData = (log) => {\r\n\t\tlet result = [];\r\n\t\tlet time = '';\r\n\t\tlet date = '';\r\n\t\tfor (let key in log) {\r\n\t\t\tif (!log.hasOwnProperty(key)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (key === 'time') {\r\n\t\t\t\ttime = `at ${log[key]}`;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (key === 'date') {\r\n\t\t\t\tdate = `on ${log[key]}`;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconsole.log(log[key], key);\r\n\t\t\tresult.push(`${key} was changed to ${log[key]} ${time} ${date}`);\r\n\t\t\tconsole.log(result);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconst handleModifyExistingOrder = (formData, formConfig) => {\r\n\t\tconst log = (Object.assign({}, formData));\r\n\t\tconsole.log(log, formData);\r\n\t\tfor (let key in log) {\r\n\t\t\tif (!formData.hasOwnProperty(key)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!formConfig[key] || !isNeedsLogging(formData.logs, key, formData[key])) {\r\n\t\t\t\tdelete log[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\tformData.logsForExcel.push(handleCreateLogsForExcelData(log));\r\n\t\tformData.logs.push(log);\r\n\t\tupdateOrder(formData);\r\n\t}\r\n\r\n\tconst handleModifyPendingOrder = (data) => {\r\n\t\tstartForm(\r\n\t\t\tdata,\r\n\t\t\t{\r\n\t\t\t\ttitle: false,\r\n\t\t\t\tformTitle: 'Modify Pending Order',\r\n\t\t\t\tformSubmitAction: handleModifyExistingOrder\r\n\t\t\t});\r\n\t\t\thistory.push('/form');\r\n\t}\r\n\r\n\tconst handleModifyActiveOrder = (data) => {\r\n\t\tstartForm(\r\n\t\t\tdata,\r\n\t\t\t{\r\n\t\t\t\ttitle: false,\r\n\t\t\t\tposAmount: false,\r\n\t\t\t\tposLevel: false,\r\n\t\t\t\tformTitle: 'Modify Active Order',\r\n\t\t\t\tformSubmitAction: handleModifyExistingOrder\r\n\t\t\t});\r\n\t\t\thistory.push('/form');\r\n\t}\r\n\r\n\tconst handleActivateOrder = (data) => {\r\n\t\tstartForm(\r\n\t\t\tObject.assign({}, data, { status: 'active' }),\r\n\t\t\t{\r\n\t\t\t\ttitle: false,\r\n\t\t\t\tposAmount: false,\r\n\t\t\t\tposLevel: false,\r\n\t\t\t\tstopLoss: false,\r\n\t\t\t\ttakeProfit: false,\r\n\t\t\t\tdescription: false,\r\n\t\t\t\tformTitle: 'Activate Order',\r\n\t\t\t\tformSubmitAction: handleModifyExistingOrder\r\n\t\t\t});\r\n\t\t\thistory.push('/form');\r\n\t}\r\n\r\n\tconst handleCancelOrder = (data) => {\r\n\t\tstartForm(\r\n\t\t\tObject.assign({}, data, { status: 'cancel' }),\r\n\t\t\t{\r\n\t\t\t\ttitle: false,\r\n\t\t\t\tposAmount: false,\r\n\t\t\t\tposLevel: false,\r\n\t\t\t\tstopLoss: false,\r\n\t\t\t\ttakeProfit: false,\r\n\t\t\t\tformTitle: 'Cancel Order',\r\n\t\t\t\tformSubmitAction: handleModifyExistingOrder\r\n\t\t\t});\r\n\t\t\thistory.push('/form');\r\n\t}\r\n\r\n\tconst handleCloseOrder = (data) => {\r\n\t\tstartForm(\r\n\t\t\tObject.assign({}, data, {status: 'close'}),\r\n\t\t\t{\r\n\t\t\t\ttitle: false,\r\n\t\t\t\tposAmount: false,\r\n\t\t\t\tposLevel: false,\r\n\t\t\t\tstopLoss: false,\r\n\t\t\t\ttakeProfit: false,\r\n\t\t\t\tdescription: false,\r\n\t\t\t\tformTitle: 'Close Order',\r\n\t\t\t\tformSubmitAction: handleModifyExistingOrder,\r\n\t\t\t});\r\n\t\t\thistory.push('/form');\r\n\t}\r\n\r\n\tconst getLogValueRecursively = (logs, key, index = logs.length - 1) => {\r\n\t\tconst log = logs[index];\r\n\t\tif (log.hasOwnProperty(key)) {\r\n\t\t\treturn log[key];\r\n\t\t}\r\n\t\tif (key === 'description') {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn getLogValueRecursively(logs, key, index - 1);\r\n\t}\r\n\r\n\tconst spreadAllLogs = (logs) => {\r\n\t\treturn logs.map((log, index) => {\r\n\t\t\tif (index === 0) {\r\n\t\t\t\treturn log;\r\n\t\t\t}\r\n\t\t\tconst result = {};\r\n\t\t\tfor (const key in logs[0]) {\r\n\t\t\t\tresult[key] = getLogValueRecursively(logs.slice(0, index + 1), key);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t})\r\n\t}\r\n\r\n\tconst logsList = spreadAllLogs(order.logs).map((log, index) => {\r\n\t\tconst { ...itemProps } = log;\r\n\t\treturn (\r\n\t\t\t<Fragment key={index}>\r\n\t\t\t\t<ListItem className={classes.logItem}>\r\n\t\t\t\t\t\t\t<Log {...itemProps} />\r\n\t\t\t\t</ListItem>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='order-container'>\r\n\t\t\t<Card className={classes.root}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t<Icon aria-label=\"cancel\" color=\"secondary\" className='icon' onClick={() => deleteActiveOrder()}>cancel</Icon>\r\n\t\t\t\t\t<div className='order-content'>\r\n\t\t\t\t\t\t<span>{order.title}</span>\r\n\t\t\t\t\t\t<span>{order.date}</span>\r\n\t\t\t\t\t\t<span>{order.time}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='order-content'>\r\n\t\t\t\t\t\t<span><span>size: </span>{order.posAmount}</span>\r\n\t\t\t\t\t\t<span><span>PL: </span>{order.posLevel}</span>\r\n\t\t\t\t\t\t<span><span>SL: </span>{order.stopLoss}</span>\r\n\t\t\t\t\t\t<span><span>TP: </span>{order.takeProfit}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<List>{logsList}</List>\r\n\t\t\t\t{(order.status === 'pending') ? \r\n\t\t\t\t\t\t<ButtonGroup color=\"primary\" aria-label=\"outlined secondary button group\">\r\n\t\t\t\t\t\t\t<Button onClick={() => handleModifyPendingOrder(order)}>Modify</Button>\r\n\t\t\t\t\t\t\t<Button onClick={() => handleCancelOrder(order)}>Cancel</Button>\r\n\t\t\t\t\t\t\t<Button onClick={() => handleActivateOrder(order)}>Activate</Button>\r\n\t\t\t\t\t\t</ButtonGroup> :\r\n\t\t\t\t\t(order.status === 'active') ?\r\n\t\t\t\t\t<ButtonGroup color=\"primary\" aria-label=\"contained primary button group\">\r\n\t\t\t\t\t\t<Button onClick={() => handleModifyActiveOrder(order)}>Modify</Button>\r\n\t\t\t\t\t\t<Button onClick={() => handleCloseOrder(order)}>Close</Button>\r\n\t\t\t\t\t</ButtonGroup> :\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\torder: state.orders.activeOrder\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tstartForm: (data, config, title) => {\r\n\t\t\tdispatch(startFormAction(data, config, title))\r\n\t\t},\r\n\t\topenForm: () => {\r\n\t\t\tdispatch(openFormAction())\r\n\t\t},\r\n\t\tdeleteOrder: (id) => {\r\n\t\t\tdispatch(deleteOrderAction(id));\r\n\t\t},\r\n\t\tupdateOrder: (data) => {\r\n\t\t\tdispatch(updateOrderAction(data))\r\n\t\t},\r\n\t\tdeleteActiveOrder: () => {\r\n\t\t\tdispatch(deleteActiveOrderAction())\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","import React from 'react';\r\nimport '../Card/Card.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { connect } from 'react-redux';\r\nimport { activateOrderAction } from '../../redux/actions';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: 350,\r\n\t\tboxShadow: '0 2px 4px -2px rgba(0,0,0,0.24), 0 4px 24px -2px rgba(0, 0, 0, 0.2)',\r\n\t},\r\n\tcontent: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t}\r\n});\r\n\r\n\r\nconst CardOrder = (cardData) => {\r\n\tconst { title, date, posAmount, stopLoss, takeProfit, status,id, time, activateOrder, result } = cardData;\r\n\r\n\tconst handleOpenOrder = (id) => {\r\n\t\tactivateOrder(id);\r\n\t}\r\n\r\n\tconst setResultClassName = (result) => {\r\n\t\treturn result < 0 ? 'negative-result' : 'positive-result';\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root} onClick={() => handleOpenOrder(id)}>\r\n\t\t\t<CardContent className={classes.content} >\r\n\t\t\t\t<p>{title}</p>\r\n\t\t\t\t<div className='order-content'>\r\n\t\t\t\t\t<span>{date}</span>\r\n\t\t\t\t\t<span>{time}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='order-content'>\r\n\t\t\t\t\t<span><span>size: </span>{posAmount}</span>\r\n\t\t\t\t\t<span><span>SL: </span>{stopLoss}</span>\r\n\t\t\t\t\t<span><span>TP: </span>{takeProfit}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t{result ?\r\n\t\t\t\t\t<span className={setResultClassName(result)}>{result.toFixed(3)}</span> :\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t<span className='status-field'>{status}</span>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tapp: state.app,\r\n\t\torders: state.orders\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tactivateOrder: (id) => {\r\n\t\t\tdispatch(activateOrderAction(id))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrder);","import React, { Fragment } from 'react';\r\nimport Order from '../Order/Order';\r\nimport CardOrder from '../Card/Card';\r\nimport './List.scss';\r\n\r\nconst ListOrders = ({orders}) => {\r\n\tconst { dataOrder, activeOrder } = orders;\r\n\t\r\n\tconst orderList = dataOrder.map(item => {\r\n\tconst {...itemProps } = item;\r\n\t\treturn (\r\n\t\t\t<li key={itemProps.id}>\r\n\t\t\t\t<CardOrder {...itemProps}/>\r\n\t\t\t</li>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='list-container'>\r\n\t\t\t{!activeOrder ?\r\n\t\t\t\t<ul className='list'>\r\n\t\t\t\t\t{orderList}\r\n\t\t\t\t</ul> :\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<div className='list-container-active'>\r\n\t\t\t\t\t\t<ul className='list'>\r\n\t\t\t\t\t\t\t{orderList}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Order/>\r\n\t\t\t\t</Fragment>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ListOrders;","export const uid = () => {\r\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx'.replace(/[xy]/g, function(c) {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport const DATA = [\r\n\t{\r\n\t\tid: uid(),\r\n\t\tdate: '22.05.2020',\r\n\t\ttitle: 'Order 1',\r\n\t\tposAmount: 0.25,\r\n\t\tposLevel: 1.75467,\r\n\t\tstopLoss: 2,\r\n\t\ttakeProfit: 5,\r\n\t\tdescription: 'hello my sweaty',\r\n\t\tstatus: 'pending',\r\n\t\tlogs: []\r\n\t},\r\n\t{\r\n\t\tid: uid(),\r\n\t\tdate: '21.05.2020',\r\n\t\ttitle: 'Order 1',\r\n\t\tposAmount: 0.20,\r\n\t\tposLevel: 1.75555,\r\n\t\tstopLoss: 1,\r\n\t\ttakeProfit: 2,\r\n\t\tdescription: 'hello my world',\r\n\t\tstatus: 'active',\r\n\t\tlogs: []\r\n\t\t}\r\n]\r\n\r\nexport const FORM_DATA = {\r\n\ttitle: '',\r\n\ttime: '',\r\n\tdate: '',\r\n\tposAmount: '',\r\n\tposLevel: '',\r\n\tstopLoss: '',\r\n\ttakeProfit: '',\r\n\tdescription: '',\r\n\tstatus: 'pending'\r\n}\r\n\r\nexport const FORM_CONFIG = {\r\n\ttitle: true,\r\n\tdate: true,\r\n\ttime: true,\r\n\tposAmount: true,\r\n\tposLevel: true,\r\n\tstopLoss: true,\r\n\ttakeProfit: true,\r\n\tdescription: true,\r\n\tformTitle: '',\r\n\tstatus: true,\r\n\tformSubmitAction: null,\r\n\ttypeAction: 'modify'\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { uid } from '../../data';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\topenFormAction,\r\n\tresetFormAction,\r\n\tactivateOrderAction,\r\n\tupdateDepositAction\r\n} from '../../redux/actions';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tmaxWidth: 500,\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: 20,\r\n\t\tmargin: 'auto'\r\n\t},\r\n\tbox: {\r\n\t\tmargin: 'auto'\r\n\t},\r\n\tTextField: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: '20px'\r\n\t},\r\n\tTextFieldHalfWidth: {\r\n\t\twidth: '45%',\r\n\t\tmarginBottom: '20px'\r\n\t},\r\n\ttitle: {\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 24\r\n\t}\r\n});\r\n\r\nconst Form = ({ formState, setActiveOrder , updateDeposit, app}) => {\r\n\tconst { formData, formConfig} = formState;\r\n\tconst [initialData, setData] = useState(\r\n\t\tObject.assign({}, formData, {\r\n\t\t\tdate: new Date().toJSON().slice(0, 10).replace(/-/g, '-'),\r\n\t\t\ttime: new Date().toString().slice(16, 21),\r\n\t\t}));\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (formConfig.typeAction === 'create') {\r\n\t\t\tinitialData.id = uid();\r\n\t\t}\r\n\t\tformConfig.formSubmitAction(initialData, formConfig);\r\n\t\tsetActiveOrder(initialData.id);\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\tconst handleCloseForm = () => {\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\tconst handleCloseWithTakeProfit = () => {\r\n\t\tconst resultPoint = Math.abs(parseFloat(initialData.takeProfit) - parseFloat(initialData.posLevel)) * 10000;\r\n\t\tsetData({ ...initialData, status: 'Hit TP', result: resultPoint });\r\n\t\tconst result = resultPoint * initialData.posAmount;\r\n\t\tupdateDeposit(parseFloat(app.depositValue) + result);\r\n\t}\r\n\r\n\tconst handleCloseStopLoss = () => {\r\n\t\tconst resultPoint = -1 * Math.abs(parseFloat(initialData.stopLoss) - parseFloat(initialData.posLevel)) * 10000;\r\n\t\tsetData({ ...initialData, status: 'Hit SL', result: resultPoint });\r\n\t\tconst result = resultPoint * initialData.posAmount;\r\n\t\tupdateDeposit(parseFloat(app.depositValue) + result);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box className={classes.box}>\r\n\t\t\t<Typography className={classes.title} color=\"primary\" component=\"h1\">\r\n\t\t\t\t{formConfig.formTitle}\r\n\t\t\t</Typography>\r\n\t\t\t<form onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t\t{formConfig.title ?\r\n\t\t\t\t\t<TextField\r\n          required\r\n          id=\"filled-title\"\r\n\t\t\t\t\tlabel=\"Title\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tclassName={classes.TextField}\r\n          defaultValue={initialData.title}\r\n\t\t\t\t\tonChange={e => setData({...initialData, title: e.target.value})}\r\n        /> :\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"date\"\r\n\t\t\t\t\tlabel=\"Date\"\r\n\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\tname='date'\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tdefaultValue={initialData.date}\r\n\t\t\t\t\tclassName={classes.TextFieldHalfWidth}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={e => setData({...initialData, date: e.target.value})}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"time\"\r\n\t\t\t\t\tlabel=\"Time\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tdefaultValue={initialData.time}\r\n\t\t\t\t\tclassName={classes.TextFieldHalfWidth}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={e => setData({...initialData, time: e.target.value})}\r\n\t\t\t\t/>\r\n\t\t\t\t{formConfig.posAmount ?\r\n\t\t\t\t\t<TextField\r\n          required\r\n          id=\"filled-posAmount\"\r\n\t\t\t\t\tlabel=\"posAmount\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tclassName={classes.TextField}\r\n          defaultValue={initialData.posAmount}\r\n\t\t\t\t\tonChange={e => setData({...initialData, posAmount: e.target.value})}\r\n        /> :\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{formConfig.posLevel ?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tid=\"filled-posLevel\"\r\n\t\t\t\t\tlabel=\"posLevel\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tclassName={classes.TextField}\r\n\t\t\t\t\tdefaultValue={initialData.posLevel}\r\n\t\t\t\t\tonChange={e => setData({...initialData, posLevel: e.target.value})}\r\n\t\t\t\t/> :\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{formConfig.stopLoss ?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tid=\"filled-stopLoss\"\r\n\t\t\t\t\tlabel=\"stopLoss\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tclassName={classes.TextFieldHalfWidth}\r\n\t\t\t\t\tdefaultValue={initialData.stopLoss}\r\n\t\t\t\t\tonChange={e => setData({...initialData, stopLoss: e.target.value})}\r\n\t\t\t\t\t/> :\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{formConfig.takeProfit ?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tid=\"filled-takeProfit\"\r\n\t\t\t\t\tlabel=\"takeProfit\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tclassName={classes.TextFieldHalfWidth}\r\n\t\t\t\t\tdefaultValue={initialData.takeProfit}\r\n\t\t\t\t\tonChange={e => setData({...initialData, takeProfit: e.target.value})}\r\n\t\t\t\t\t/> :\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{formConfig.description ?\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tid=\"outlined-multiline-static\"\r\n\t\t\t\t\tlabel=\"description\"\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\trows={4}\r\n\t\t\t\t\tclassName={classes.TextField}\r\n\t\t\t\t\tdefaultValue={initialData.description}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonChange={e => setData({...initialData, description: e.target.value})}\r\n\t\t\t\t\t/> :\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{formData.status === 'close' ?\r\n\t\t\t\t\t<ButtonGroup color=\"primary\" aria-label=\"contained primary button group\">\r\n\t\t\t\t\t\t<Button type='submit' onClick={() => handleCloseWithTakeProfit()}>Hit TP</Button>\r\n\t\t\t\t\t\t<Button type='submit' onClick={() => handleCloseStopLoss()}>Hit SL</Button>\r\n\t\t\t\t\t\t<Button type='button' onClick={() => handleCloseForm()}>Cancel</Button>\r\n\t\t\t\t\t</ButtonGroup> :\r\n\t\t\t\t\t<ButtonGroup color=\"primary\" aria-label=\"contained primary button group\">\r\n\t\t\t\t\t\t<Button type='submit'>{formConfig.formTitle}</Button>\r\n\t\t\t\t\t\t<Button type='button' onClick={() => handleCloseForm()}>Cancel</Button>\r\n\t\t\t\t\t</ButtonGroup> \r\n\t\t\t\t}\r\n\t\t\t</form>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tapp: state.app,\r\n\t\tformState: state.form\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\topenForm: () => {\r\n\t\t\tdispatch(openFormAction())\r\n\t\t},\r\n\t\tresetForm: () => {\r\n\t\t\tdispatch(resetFormAction())\r\n\t\t},\r\n\t\tsetActiveOrder: (id) => {\r\n\t\t\tdispatch(activateOrderAction(id));\r\n\t\t},\r\n\t\tupdateDeposit: (deposit) => {\r\n\t\t\tdispatch(updateDepositAction(deposit));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React, { useState } from 'react';\nimport './App.scss';\nimport List from './components/List/List';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Form from './components/Form/Form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport {\n\tBox,\n\tButton,\n\tButtonGroup,\n\tTextField,\n\tFab,\n\tAppBar,\n\tToolbar\n} from '@material-ui/core/';\nimport {\n\topenFormAction,\n\tstartFormAction,\n\taddOrderAction,\n\topenDepositFormAction,\n\tupdateDepositAction,\n\tchangeFilterAction,\n\tresetFilterAction,\n\tchangeSortOrdersAction\n} from './redux/actions';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n\tfab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n\t\tright: theme.spacing(2),\n\t\tzIndex: 2\n  }\n}));\n\nconst App = (props) => {\n\tconst {\n\t\tapp,\n\t\taddOrder,\n\t\tstartForm,\n\t\tform,\n\t\topenDepositForm,\n\t\tupdateDeposit,\n\t\torders,\n\t\tchangeFilter,\n\t\tresetFilter,\n\t\tchangeSortOrders\n\t} = props;\n\tconst { isOpenForm, isFormDepositOpen, depositValue, sortName, filter } = app;\n\tconst { formData } = form;\n\tconst [initialDepositValue, setDepositValue] = useState(depositValue);\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\n\tconst handleCreateOrder = (formData) => {\n\t\tconst {\n\t\t\tstopLoss,\n\t\t\tdate,\n\t\t\ttime,\n\t\t\tposAmount,\n\t\t\tposLevel,\n\t\t\ttakeProfit,\n\t\t\tdescription,\n\t\t\tstatus,\n\t\t} = formData;\n\n\t\taddOrder({\n\t\t\t...formData,\n\t\t\tlogs: [{\n\t\t\t\tstopLoss,\n\t\t\t\tdate,\n\t\t\t\tposAmount,\n\t\t\t\tposLevel,\n\t\t\t\ttakeProfit,\n\t\t\t\tdescription,\n\t\t\t\tstatus,\n\t\t\t\ttime\n\t\t\t}],\n\t\t\tlogsForExcel: []\n\t\t})\n\t}\n\n\t\n\n\tconst onOpenFormClick = (data) => {\n\t\tstartForm(\n\t\t\tdata,\n\t\t\t{\n\t\t\t\tformTitle: 'Create Pending Order',\n\t\t\t\tformSubmitAction: handleCreateOrder,\n\t\t\t\ttypeAction: 'create'\n\t\t\t});\n\t\thistory.push('/form');\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tupdateDeposit(initialDepositValue);\n\t\topenDepositForm();\n\t}\n\n\tconst filterData = (list) => {\n\t\tif (filter.all) {\n\t\t\treturn list;\n\t\t}\n\t\tconst filteredList = list.filter(order => {\n\t\t\tconst filterResult = (filter.running && (order.status === 'active' || order.status === 'pending')) ||\n\t\t\t\t(filter.finished && (order.status === 'Hit TP' || order.status === 'Hit SL' || order.status === 'cancel')) ||\n\t\t\t\t(filter.wins && order.result > 0) || (filter.loses && order.result < 0);\n\t\t\treturn filterResult\n\t\t});\n\t\treturn filteredList\n\t}\n\n\tconst createFullDate = (d, t) => {\n\t\tconst time = t.split(':');\n\t\tconst date = d.split('-');\n\t\treturn new Date(date[0], date[1] - 1, date[2], time[0], time[1]).getTime();\n\t}\n\n\tconst titleSortStrategy = (a, b) => {\n\t\treturn a.title.toLocaleString() > b.title.toLocaleString() ? 1 : -1\n\t}\n\n\tconst latestSortStrategy = (a, b) => {\n\t\tconst result = createFullDate(a.date, a.time) - createFullDate(b.date, b.time);\n\t\treturn result;\n\t}\n\n\tconst newestSortStrategy = (a, b) => {\n\t\tconst result = createFullDate(b.date, b.time) - createFullDate(a.date, a.time);\n\t\treturn result;\n\t}\n\n\tconst statusSortStrategy = (a, b) => {\n\t\tconst priorityStatus = {\n\t\t\tpending: 1,\n\t\t\tactive: 2,\n\t\t\tHitTP: 3,\n\t\t\tHitSL: 4,\n\t\t\tcancel: 5\n\t\t}\n\t\tconst newA = a.status.replace(' ', '');\n\t\tconst newB = b.status.replace(' ', '');\n\t\treturn priorityStatus[newA] - priorityStatus[newB];\n\t}\n \n\tconst applySort = (data) => {\n\t\tswitch (sortName) {\n\t\t\tcase 'LATEST':\n\t\t\t\tdata.sort(latestSortStrategy);\n\t\t\t\treturn data;\n\t\t\tcase 'NEWEST':\n\t\t\t\tdata.sort(newestSortStrategy);\n\t\t\t\treturn data;\n\t\t\tcase 'STATUS':\n\t\t\t\tdata.sort(statusSortStrategy);\n\t\t\t\treturn data;\n\t\t\tdefault:\n\t\t\t\tdata.sort(titleSortStrategy);\n\t\t\t\treturn data;\n\t\t}\n\t}\n\n\tconst handleSearch = () => {\n\t\treturn orders.dataOrder.filter(order => order.title.toLowerCase().includes(searchValue) ||\n\t\t\torder.description.toLowerCase().includes(searchValue));\n\t}\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<Fab\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\taria-label=\"add\"\n\t\t\t\tclassName={classes.fab}\n\t\t\t\tonClick={() => onOpenFormClick(formData)}>\n\t\t\t\t<AddIcon />\n\t\t\t</Fab>\n\t\t\t<AppBar position=\"static\" className='header'>\n\t\t\t\t<Toolbar className='nav'>\n\t\t\t\t\t<div className='balance-content'>\n\t\t\t\t\t\t<span>Balance:&nbsp;</span>\n\t\t\t\t\t\t<span className='balance-value'>{depositValue}&#8364;</span>\n\t\t\t\t\t\t{!isFormDepositOpen ?\n\t\t\t\t\t<EditIcon\n\t\t\t\t\t\tonClick={() => openDepositForm()} /> :\n\t\t\t\t\t<form onSubmit={handleSubmit} className='balance-form'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"Deposit\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tdefaultValue={ depositValue }\n\t\t\t\t\t\t\tonChange={e => setDepositValue(e.target.value)}\n\t\t\t\t\t\tlabel=\"Amount\" />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>Set</Button>\n\t\t\t\t\t</form>\n\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<h1 className='title'>Trading Journal</h1>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\tlabel=\"Search\"\n\t\t\t\t\t\tdefaultValue={searchValue}\n\t\t\t\t\t\tclassName={classes.navItem}\n\t\t\t\t\t\tonChange={e => setSearchValue(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto='/table' className='download-link'>\n\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Box>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<div className='filter-content'>\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\taria-label=\"outlined primary button group\"\n\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={filter.all ? \"contained\" : null}\n\t\t\t\t\t\t\tonClick={() => resetFilter()}\n\t\t\t\t\t\t>All</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={filter.running ? \"contained\" : null}\n\t\t\t\t\t\t\tonClick= {() => changeFilter('running')}\n\t\t\t\t\t\t>Running</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={filter.finished ? \"contained\" : null}\n\t\t\t\t\t\t\tonClick= {() => changeFilter('finished')}\n\t\t\t\t\t\t>Finished</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={filter.wins ? \"contained\" : null}\n\t\t\t\t\t\t\tonClick= {() => changeFilter('wins')}\n\t\t\t\t\t\t>Wins</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={filter.loses ? \"contained\" : null}\n\t\t\t\t\t\t\tonClick= {() => changeFilter('loses')}\n\t\t\t\t\t\t>Loses</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\taria-label=\"outlined primary button group\"\n\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={sortName === 'TITLE' ? \"contained\" : null}\n\t\t\t\t\t\t\tonClick={() => changeSortOrders('TITLE')}\n\t\t\t\t\t\t>Title</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={sortName === 'LATEST' ? \"contained\" : null}\n\t\t\t\t\t\t\tonClick={() => changeSortOrders('LATEST')}\n\t\t\t\t\t\t>Latest</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={sortName === 'NEWEST'? \"contained\" : null}\n\t\t\t\t\t\t\tonClick={() => changeSortOrders('NEWEST')}\n\t\t\t\t\t\t>Newest</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={sortName === 'STATUS'? \"contained\" : null}\n\t\t\t\t\t\t\tonClick={() => changeSortOrders('STATUS')}\n\t\t\t\t\t\t>Status</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t(!isOpenForm ?\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\torders={\n\t\t\t\t\t\t\t\tObject.assign({},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdataOrder: applySort(filterData(handleSearch(orders.dataOrder))),\n\t\t\t\t\t\t\t\t\t\tactiveOrder: orders.activeOrder\n\t\t\t\t\t\t\t\t\t})} />:\n\t\t\t\t\t<Form />\n\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n  );\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tapp: state.app,\n\t\tform: state.form,\n\t\torders: state.orders,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\topenForm: () => {\n\t\t\tdispatch(openFormAction())\n\t\t},\n\t\taddOrder: (data) => {\n\t\t\tdispatch(addOrderAction(data))\n\t\t},\n\t\tstartForm: (data, config, title) => {\n\t\t\tdispatch(startFormAction(data, config, title))\n\t\t},\n\t\topenDepositForm: () => {\n\t\t\tdispatch(openDepositFormAction())\n\t\t},\n\t\tupdateDeposit: (deposit) => {\n\t\t\tdispatch(updateDepositAction(deposit));\n\t\t},\n\t\tresetFilter: () => {\n\t\t\tdispatch(resetFilterAction())\n\t\t},\n\t\tchangeFilter: (filterName) => {\n\t\t\tdispatch(changeFilterAction(filterName))\n\t\t},\n\t\tchangeSortOrders: (strategyName) => {\n\t\t\tdispatch(changeSortOrdersAction(strategyName))\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import React from 'react';\r\nimport { Fab } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tfab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst ExportCSV = ({ csvData, fileName }) => {\r\n\tconst classes = useStyles();\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const exportToCSV = (csvData, fileName) => {\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\treturn (\r\n\t\t<Fab\r\n\t\t\tcolor=\"secondary\"\r\n\t\t\taria-label=\"getApp\"\r\n\t\t\tclassName={classes.fab}\r\n\t\t\tonClick={(e) => exportToCSV(csvData, fileName)}>\r\n\t\t\t\t<GetAppIcon />\r\n\t\t\t</Fab>\r\n        // <Button variant=\"contained\" color='primary' onClick={(e) => exportToCSV(csvData,fileName)}>Export</Button>\r\n    )\r\n}\r\n\r\nexport default ExportCSV;","import React, { Fragment } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExportCSV from '../ExportCSV/ExportCSV';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n\t}\r\n}))(TableCell);\r\n\r\nconst dataOrder = JSON.parse(localStorage.getItem('dataOrder'));\r\nconst dataToExcel = dataOrder ? dataOrder.map(order => {\r\n\treturn (\r\n\t\t{\r\n\t\t\ttitle: order.title,\r\n\t\t\tstatus: order.status,\r\n\t\t\tposAmount: order.posAmount,\r\n\t\t\tposLevel: order.posLevel,\r\n\t\t\tstopLoss: order.stopLoss,\r\n\t\t\ttakeProfit: order.takeProfit,\r\n\t\t\tdate: order.date,\r\n\t\t\ttime: order.time,\r\n\t\t\tdescription: order.description,\r\n\t\t\tcomments: order.logsForExcel ? order.logsForExcel.join(\"\\r\\n\") : null\r\n\t\t}\r\n\t)\r\n}) : null;\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst comments = (array) => {\r\n\treturn array.map((item, index)=> {\r\n\t\treturn <Box key={index}>{item}</Box>\r\n\t})\r\n}\r\n\r\nconst tableRow = dataOrder ? dataOrder.map(order => {\r\n\treturn (\r\n\t\t<StyledTableRow key={order.id}>\r\n\t\t\t<StyledTableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t{order.title}\r\n\t\t\t</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.status}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.posAmount}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.posLevel}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.stopLoss}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.takeProfit}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.date}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.time}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.description}</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\">{order.logsForExcel ? comments(order.logsForExcel) : null}</StyledTableCell>\r\n\t\t</StyledTableRow>\r\n\t)\r\n}) : null\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst TableData = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div class='container'>\r\n\t\t<TableContainer component={Paper} className={classes.root}>\r\n\t\t\t<ExportCSV csvData={dataToExcel} fileName='dataOrders' />\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n\t\t\t\t\t\t<StyledTableCell>Title</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align=\"right\">Status</StyledTableCell>\r\n            <StyledTableCell align=\"right\">PosAmount</StyledTableCell>\r\n            <StyledTableCell align=\"right\">PosLevel</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Stop Loss</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align=\"right\">Take Profit</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align=\"right\">Date</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align=\"right\">Time</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align=\"right\">Description</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align=\"right\">Comments</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tableRow}\r\n        </TableBody>\r\n\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</div>\r\n  );\r\n}\r\nexport default TableData;","const getOrdersData = () => {\r\n\treturn JSON.parse(localStorage.getItem('dataOrder'));\r\n}\r\n\r\nconst setNewOrder = (order) => {\r\n\tlet data = getOrdersData();\r\n\tif (data) {\r\n\t\tdata.push(order)\r\n\t} else {\r\n\t\tdata = [order];\r\n\t}\r\n\r\n\tlocalStorage.setItem('dataOrder', JSON.stringify(data))\r\n}\r\n\r\nconst updateOrderData = (order) => {\r\n\tlet data = getOrdersData();\r\n\tconsole.log(data);\r\n\tconst index = data.findIndex(item => item.id === order.id);\r\n\tif (index === -1) {\r\n\t\treturn;\r\n\t}\r\n\tdata[index] = order;\r\n\tconsole.log(data);\r\n\tlocalStorage.setItem('dataOrder', JSON.stringify(data))\r\n}\r\n\r\nconst getActiveOrder = () => {\r\n\ttry {\r\n\t\treturn JSON.parse(localStorage.getItem('activeOrder'));\r\n\t} catch {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst setActiveOrder = (order) => {\r\n\tlocalStorage.setItem('activeOrder', JSON.stringify(order));\r\n}\r\n\r\nconst deleteActiveOrder = () => {\r\n\tlocalStorage.removeItem('activeOrder');\r\n}\r\n\r\nconst setDepositValue = (deposit) => {\r\n\tlocalStorage.setItem('depositValue', JSON.stringify(deposit));\r\n}\r\n\r\nconst getDepositValue = () => {\r\n\treturn JSON.parse(localStorage.getItem('depositValue'));\r\n}\r\n\r\nexport const depositValue = {\r\n\tget: getDepositValue,\r\n\tset: setDepositValue\r\n}\r\n\r\nexport const orderData = {\r\n\tget: getOrdersData,\r\n\tset: setNewOrder,\r\n\tupdate: updateOrderData\r\n}\r\n\r\nexport const activeOrder = {\r\n\tget: getActiveOrder,\r\n\tset: setActiveOrder,\r\n\tdelete: deleteActiveOrder\r\n}","import {\r\n\tADD_ORDER,\r\n\tCHANGE_STATUS,\r\n\tUPDATE_ORDER,\r\n\tSET_ACTIVE_ORDER,\r\n\tDELETE_ACTIVE_ORDER,\r\n} from '../actionsTypes';\r\n\r\nimport {\r\n\torderData,\r\n\tactiveOrder\r\n} from '../../handleData';\r\n\r\nimport {\r\n\tDATA\r\n} from '../../data';\r\n\r\nconst localState = orderData.get('dataOrder');\r\n\tconst initialState = {\r\n\t\tdataOrder: localState ? localState : [],\r\n\t\tactiveOrder: activeOrder.get() ? activeOrder.get() : activeOrder.delete() \r\n}\r\n\r\nconst orders = (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase ADD_ORDER:\r\n\t\t\torderData.set(payload);\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tdataOrder: [\r\n\t\t\t\t\t...state.dataOrder, payload\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\tcase UPDATE_ORDER:\r\n\t\t\t\treturn ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdataOrder: [\r\n\t\t\t\t\t\t...state.dataOrder.map(order => {\r\n\t\t\t\t\t\t\tconsole.log(order.id, payload.id);\r\n\t\t\t\t\t\t\tif (order.id === payload.id) {\r\n\t\t\t\t\t\t\t\tconsole.log(payload);\r\n\t\t\t\t\t\t\t\torderData.update(payload);\r\n\t\t\t\t\t\t\t\treturn payload;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn order;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\tcase SET_ACTIVE_ORDER:\r\n\t\t\tconst order = state.dataOrder.find(order => order.id === payload)\r\n\t\t\tactiveOrder.set(order);\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveOrder: order\r\n\t\t\t});\r\n\t\tcase DELETE_ACTIVE_ORDER:\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveOrder: activeOrder.delete()\r\n\t\t\t})\r\n\t\tcase CHANGE_STATUS: \r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tdataOrder: [\r\n\t\t\t\t...state.dataOrder.map(order => {\r\n\t\t\t\t\tif (order.id === payload.id ) {\r\n\t\t\t\t\t\torder.status = payload.status;\r\n\t\t\t\t\t\torderData.update(order)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn order;\r\n\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default orders;","import {\r\n\tOPEN_FORM,\r\n\tOPEN_DEPOSIT_FORM,\r\n\tUPDATE_DEPOSIT,\r\n\tCHANGE_FILTER_ORDERS,\r\n\tRESET_FILTER_ORDERS,\r\n\tCHANGE_SORT_ORDERS\r\n} from '../actionsTypes';\r\n\r\nimport {depositValue} from '../../handleData';\r\n\r\nlet initialState = {\r\n\tisOpenForm: false,\r\n\tisFormDepositOpen: false,\r\n\tdepositValue: depositValue.get() ? depositValue.get() : null,\r\n\tfilter: {\r\n\t\tall: true,\r\n\t\trunning: false,\r\n\t\tfinished: false,\r\n\t\twins: false,\r\n\t\tloses: false,\r\n\t},\r\n\tsortName: 'TITLE'\r\n};\r\n\r\nconst app = (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase OPEN_FORM:\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tisOpenForm: !state.isOpenForm,\r\n\t\t\t});\r\n\t\tcase OPEN_DEPOSIT_FORM:\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tisFormDepositOpen: !state.isFormDepositOpen,\r\n\t\t\t});\r\n\t\tcase UPDATE_DEPOSIT:\r\n\t\t\tdepositValue.set(payload);\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tdepositValue: payload\r\n\t\t\t});\r\n\t\tcase CHANGE_FILTER_ORDERS:\r\n\t\t\tconst filter = Object.assign({}, state.filter, { [payload]: !state.filter[payload], all: false });\r\n\t\t\tlet isAnyFilter = false;\r\n\t\t\tfor (const key in filter) {\r\n\t\t\t\tif (!filter.hasOwnProperty(key)) { return; }\r\n\t\t\t\tif (filter[key]) {\r\n\t\t\t\t\tisAnyFilter = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!isAnyFilter) { filter.all = true; }\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tfilter\r\n\t\t\t});\r\n\t\tcase RESET_FILTER_ORDERS:\r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tfilter: initialState.filter\r\n\t\t\t});\r\n\t\tcase CHANGE_SORT_ORDERS: \r\n\t\t\treturn ({\r\n\t\t\t\t...state,\r\n\t\t\t\tsortName: payload\r\n\t\t\t})\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default app;","import {\r\n\tSTART_FORM,\r\n\tRESET_FORM\r\n} from '../actionsTypes';\r\n\r\nimport { FORM_DATA, FORM_CONFIG } from '../../data';\r\nconst initialState = {\r\n\tformData: FORM_DATA,\r\n\tformConfig: FORM_CONFIG,\r\n};\r\n\r\nconst form = (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase START_FORM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformData: payload.data ? payload.data : FORM_DATA,\r\n\t\t\t\tformConfig: Object.assign({}, state.formConfig, payload.config)\r\n\t\t\t}\r\n\t\tcase RESET_FORM:\r\n\t\t\treturn state = initialState;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default form;","import { combineReducers } from 'redux';\r\nimport orders from './orders';\r\nimport app from './app';\r\nimport form from './form';\r\n\r\n\r\nconst rootReducer = combineReducers({orders, app, form});\r\n\r\nexport default rootReducer;","import { createStore} from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n// store.subscribe(() => getData(store.getState()));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Form from './components/Form/Form';\nimport TableData from './components/TableData/TableData'\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { Route, Router, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\t primary: {\n\t\t\t\tmain: \"#ffc107\" \n\t\t\t\t\t\t\t },\n\t\t secondary: {\n\t\t\t\tmain: \"#ff3d00\" \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t },\n});\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n\t<ThemeProvider theme={theme}>\n\t\t<Provider store={store}>\n\t\t\t<Router history={history}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={App} />\n\t\t\t\t\t\t<Route path=\"/table\" component={TableData} />\n\t\t\t\t\t\t<Route path=\"/form\" component={Form} />\n\t\t\t\t\t\t<Route path=\"/*\" component={() => 'NOT FOUND'} />\n\t\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</Provider>\n\t</ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}